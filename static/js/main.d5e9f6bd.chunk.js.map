{"version":3,"sources":["components/MovieCard/MovieCard.tsx","components/MoviesList/MoviesList.tsx","components/FindMovie/FindMovie.tsx","App.tsx","api.ts","index.tsx"],"names":["MovieCard","_ref","movie","_jsxs","className","children","_jsx","src","imgUrl","alt","title","description","href","imdbUrl","MoviesList","movies","map","imdbId","FindMovie","onSubmit","isLoading","changeIsLoading","isValid","changeIsValid","addFilmToList","_useState","useState","_useState2","_slicedToArray","currentMovieTitle","setCurrentMovieTitle","_Fragment","event","htmlFor","type","id","placeholder","cn","value","onChange","target","handleChangeInput","disabled","length","onClick","App","setMovies","_useState3","_useState4","setIsLoading","_useState5","_useState6","foundedFilm","setFoundedFilm","_useState7","_useState8","setIsValid","movieTitle","query","preventDefault","fetch","concat","then","res","json","catch","Response","Error","film","Title","Plot","imdbID","Poster","finally","some","_toConsumableArray","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.d5e9f6bd.chunk.js","sourcesContent":["import React from 'react';\nimport { Movie } from '../../types/Movie';\nimport './MovieCard.scss';\n\ntype Props = {\n  movie: Movie,\n};\n\nexport const MovieCard: React.FC<Props> = ({ movie }) => (\n  <div className=\"card\" data-cy=\"movieCard\">\n    <div className=\"card-image\">\n      <figure className=\"image is-4by3\">\n        <img\n          data-cy=\"moviePoster\"\n          src={movie.imgUrl}\n          alt=\"Film logo\"\n        />\n      </figure>\n    </div>\n    <div className=\"card-content\">\n      <div className=\"media\">\n        <div className=\"media-left\">\n          <figure className=\"image is-48x48\">\n            <img\n              src=\"images/imdb-logo.jpeg\"\n              alt=\"logo\"\n            />\n          </figure>\n        </div>\n        <div className=\"media-content\">\n          <p className=\"title is-8\" data-cy=\"movieTitle\">{movie.title}</p>\n        </div>\n      </div>\n\n      <div className=\"content\" data-cy=\"movieDescription\">\n        {movie.description}\n        <br />\n        <a href={movie.imdbUrl} data-cy=\"movieURL\">\n          IMDB\n        </a>\n      </div>\n    </div>\n  </div>\n);\n","import React from 'react';\n\nimport './MoviesList.scss';\nimport { MovieCard } from '../MovieCard';\nimport { Movie } from '../../types/Movie';\n\ntype Props = {\n  movies: Movie[];\n};\n\nexport const MoviesList: React.FC<Props> = ({ movies }) => (\n  <div className=\"movies\">\n    {movies.map(movie => (\n      <MovieCard\n        key={movie.imdbId}\n        movie={movie}\n      />\n    ))}\n  </div>\n);\n","import React, { useState } from 'react';\nimport cn from 'classnames';\n\nimport './FindMovie.scss';\nimport { Movie } from '../../types/Movie';\nimport { MovieCard } from '../MovieCard';\n\ninterface Props {\n  onSubmit: (event: React.FormEvent, movieTitle: string) => void,\n  isLoading: boolean,\n  changeIsLoading: (el: boolean) => void,\n  isValid: boolean,\n  changeIsValid: () => void,\n  movie: Movie | null,\n  addFilmToList: () => void,\n}\n\nexport const FindMovie: React.FC<Props> = ({\n  onSubmit,\n  isLoading,\n  changeIsLoading,\n  isValid,\n  changeIsValid,\n  movie,\n  addFilmToList,\n}) => {\n  const [currentMovieTitle, setCurrentMovieTitle] = useState('');\n\n  const handleAddMovie = () => {\n    addFilmToList();\n    setCurrentMovieTitle('');\n  };\n\n  const handleChangeInput = (event: React.ChangeEvent<HTMLInputElement>) => {\n    changeIsValid();\n    setCurrentMovieTitle(event.target.value);\n  };\n\n  return (\n    <>\n      <form\n        className=\"find-movie\"\n        onSubmit={event => onSubmit(event, currentMovieTitle)}\n      >\n        <div className=\"field\">\n          <label className=\"label\" htmlFor=\"movie-title\">\n            Movie title\n          </label>\n\n          <div className=\"control\">\n            <input\n              data-cy=\"titleField\"\n              type=\"text\"\n              id=\"movie-title\"\n              placeholder=\"Enter a title to search\"\n              className={cn('input', { 'is-danger': !isValid })}\n              // onFocus={changeIsValid}\n              value={currentMovieTitle}\n              onChange={event => handleChangeInput(event)}\n            />\n          </div>\n\n          {!isValid && (\n            <p className=\"help is-danger\" data-cy=\"errorMessage\">\n              Can&apos;t find a movie with such a title\n            </p>\n          )}\n        </div>\n\n        <div className=\"field is-grouped\">\n          <div className=\"control\">\n            <button\n              data-cy=\"searchButton\"\n              type=\"submit\"\n              className={cn(\n                'button',\n                'is-light',\n                { 'is-loading': isLoading },\n              )}\n              disabled={!(currentMovieTitle.length > 0)}\n              onClick={() => changeIsLoading(true)}\n            >\n              {movie\n                ? 'Search again'\n                : 'Find a movie'}\n            </button>\n          </div>\n\n          {movie && (\n            <div className=\"control\">\n              <button\n                data-cy=\"addButton\"\n                type=\"button\"\n                className=\"button is-primary\"\n                onClick={() => handleAddMovie()}\n              >\n                Add to the list\n              </button>\n            </div>\n          )}\n        </div>\n      </form>\n\n      {movie && (\n        <div className=\"container\" data-cy=\"previewContainer\">\n          <h2 className=\"title\">Preview</h2>\n          <MovieCard movie={movie} />\n        </div>\n      )}\n    </>\n  );\n};\n","import React, { useState } from 'react';\nimport './App.scss';\nimport { MoviesList } from './components/MoviesList';\nimport { FindMovie } from './components/FindMovie';\nimport { Movie } from './types/Movie';\nimport { getMovie } from './api';\n// import { MovieCard } from './components/MovieCard';\n\nexport const App: React.FC = () => {\n  const [movies, setMovies] = useState<Movie[]>([]);\n  const [isLoading, setIsLoading] = useState(false);\n  const [foundedFilm, setFoundedFilm] = useState<Movie | null>(null);\n  const [isValid, setIsValid] = useState(true);\n\n  const findMovieAction = (event: React.FormEvent, movieTitle: string) => {\n    event.preventDefault();\n\n    getMovie(movieTitle)\n      .then(res => {\n        if (!('Error' in res)) {\n          const film: Movie = {\n            title: res.Title,\n            description: res.Plot,\n            imdbId: res.imdbID,\n            imdbUrl: `https://www.imdb.com/title/${res.imdbID}`,\n            imgUrl: res.Poster === 'N/A'\n              ? 'https://via.placeholder.com/360x270.png?text=no%20preview'\n              : res.Poster,\n          };\n\n          setFoundedFilm(film);\n          setIsValid(true);\n        }\n\n        if ('Error' in res) {\n          setIsValid(false);\n        }\n      })\n      .finally(() => setIsLoading(false));\n  };\n\n  const addFilmToList = () => {\n    if (foundedFilm\n        && !(movies.some(movie => movie.imdbId === foundedFilm.imdbId))) {\n      setMovies([...movies, foundedFilm]);\n      setFoundedFilm(null);\n    }\n\n    if (foundedFilm\n      && movies.some(movie => movie.imdbId === foundedFilm.imdbId)) {\n      setFoundedFilm(null);\n    }\n  };\n\n  return (\n    <div className=\"page\">\n      <div className=\"page-content\">\n        <MoviesList movies={movies} />\n      </div>\n\n      <div className=\"sidebar\">\n        <FindMovie\n          onSubmit={findMovieAction}\n          isLoading={isLoading}\n          changeIsLoading={setIsLoading}\n          isValid={isValid}\n          changeIsValid={() => setIsValid(true)}\n          movie={foundedFilm}\n          addFilmToList={addFilmToList}\n        />\n      </div>\n    </div>\n  );\n};\n","import { MovieData } from './types/MovieData';\nimport { ResponseError } from './types/ReponseError';\n\nconst API_URL = 'http://www.omdbapi.com/?i=tt3896198&apikey=31991beb';\n\nexport function getMovie(query: string): Promise<MovieData | ResponseError> {\n  return fetch(`${API_URL}&t=${query}`)\n    .then(res => res.json())\n    .catch(() => ({\n      Response: 'False',\n      Error: 'unexpected error',\n    }));\n}\n","import ReactDOM from 'react-dom';\nimport 'bulma/css/bulma.css';\nimport { App } from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}